{
    "newOOPClass": {
        "prefix": "noc",
        "body": [
            "#!/usr/bin/perl\n\n",
            "use strict;",
            "use warnings;\n\n",
            "package ${1:${TM_FILENAME_BASE}};\n\n",
            "\t#This is considered a method or known as a sub",
            "sub new{",
            "\tmy \\$class = shift;",
            "\t#initializing an object",
            "\tmy \\$object_example = {",
            "\t\t'name' => shift,",
            "\t\t'a_number' => shift",
            "\t};",
            "\t#associate an object to a class",
            "\t#or bind",
            "\tbless \\$object_example, \\$class;",
            "\t#then return the object",
            "\treturn \\$object_example;",
            "}",
            "my \\$obj = ${1:${TM_FILENAME_BASE}}->new('String and id->',01);",
            "print \"\\$obj->{'name'}\";"
        ],
        "description": "Establishes a newly created class utilizing the Perl Language."
    },
    "newSubMethod": {
        "prefix": "nsm",
        "body": [
            "sub ${1:${TM_FILENAME_BASE}}{",
            "  my \\$variable = scalar(@_);",
            "  print \"\\$_[0]\";",
            "};",
            " &${1:${TM_FILENAME_BASE}}('Test string.');"
        ],
        "description": "This establishes a new method utilizing the Perl language. \n Example:"
    },
    "ifExistsInArray": {
        "prefix": "iea",
        "body": [
            "my \\$item_exists = grep { \\$_ eq 'item' } @ary;"
        ],
        "description": "This creates logic neccessary to finding a value within an array without a module."
    },
    "smartMatchArray": {
        "prefix": "sma",
        "body": [
            "my \\$item_exists = 'item' ~~ @ary;"
        ]
    },
    "variableName": {
        "prefix": "mvar",
        "body": [
            "my \\$variable = '';"
        ],
        "description": "This establishes a variable argument."
    },
    "listUtilFirst": {
        "prefix": "lufa",
        "body": [
            "my \\$item_exists = first { \\$_ eq 'item' } @ary;"
        ],
        "description": "Using List::Util first logic."
    },
    "pickRandomValue": {
        "prefix": "rav",
        "body": [
            "my \\$elem = \\$ary[rand @ary];"
        ],
        "description": "Returning a random value within the array."
    },
    "arraySortTransform": {
        "prefix": "as1",
        "body": [
            "my @sorted = map  { \\$_->[0] }\n",
            "\tsort { \\$a->[1] <=> \\$b->[1] }\n",
            "\tmap  { [\\$_, gen_key_for(\\$_)] }\n",
            "\t@ary;"
        ],
        "description": "Transform using Schwartzian transform which is a one-way sort using an array key. Ex:\nlength($_) (to sort by string length)\n lc($_)  (to do case-insensitive sorting)\nRelated documentation: https://en.wikipedia.org/wiki/Schwartzian_transform"
    },
    "File1Hash": {
        "prefix": "hf1",
        "body": [
            "my \\$content = do { local \\$/; <\\$fh>};"
        ],
        "description": "This snippet slurps an entire file\n which is what \\$fh variable stands for, into memory(scalar variable). \n Then the do {} block localizes the effect of $/."
    },
    "ReadFileOnOpen": {
        "prefix": "roo",
        "body": [
            "my \\$content = do { local \\$/; open my \\$fh, \"<\", \\$filename; <\\$fh> };"
        ],
        "description": "This opens a file by starting with the file name."
    }
}